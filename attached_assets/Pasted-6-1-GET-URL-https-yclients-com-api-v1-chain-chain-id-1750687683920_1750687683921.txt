6.1. Получение списка услуг (зон):
* Метод: GET
* URL: https://yclients.com/api/v1/chain/{chain_id}/services/composites?category_id={category_id}
* {chain_id}: ID сети, из настроек админки (например, 566822).
* {category_id}: ID категории услуг, из настроек админки (например, 11254696).
* Заголовки:
* Authorization: Bearer {token} ({token} из настроек админки, например, u8xzkdpkgfc73uektn64).
* Accept: application/json
* Cookie: auth={auth_cookie_value} ({auth_cookie_value} из настроек админки, например, u-12568681-c9213a897dec4a579d4ec).
* Ожидаемый ответ (JSON, пример структуры для одной услуги в массиве data):
json { "success": true, "data": [ { "id": 11254701, // Использовать как yclients_service_id "title": "Верхняя губа", // Название услуги "booking_title": "Верхняя губа", "category_id": 11254696, // ID категории "is_multi": false, "is_comment_managed_only_in_chain": false, "is_price_managed_only_in_chain": false, "comment": "", "is_composite": false, "is_chain": true, "salon_id": 0, "price_min": 800, // Использовать как цену за одну процедуру "price_max": 800, "salon_ids": [], "in_main_location": false, "image_group": [] } // ... другие услуги ] }
* Действие: Бэкенд получает список, сохраняет/обновляет его в локальной БД (таблица YclientsServicesCache), учитывая, какие услуги отмечены активными в админке. Фронтенд запрашивает этот отфильтрованный список у бэкенда для отображения мастеру.

6.2. Получение списка существующих типов абонементов:
* Метод: GET
* URL: https://yclients.com/api/v1/chain/{chain_id}/loyalty/abonement_types?page=1&limit=250&include[0]=balance_container&include[1]=abonements_count&include[2]=attached_salon_ids&is_archived=0&filter[category_id]=0 (URL должен быть точным, {chain_id} из админки, например, 566822).
* Заголовки: Аналогично п. 6.1.
* Ожидаемый ответ (JSON, пример структуры для одного типа абонемента в массиве data):
json { "success": true, "data": [ { "id": 373012, // yclients_abonement_type_id "salon_group_id": 566822, "category_id": null, "title": "4.1 Подмышки, бикини(т), бёдра, голени", // Название типа "period": 2, "period_unit_id": 4, // 4 - год "allow_freeze": true, "freeze_limit": 0, // Пример, может быть другим (например, 180 дней) "freeze_limit_unit_id": 1, // 1 - дни "is_booking_when_frozen_allowed": false, "is_allow_empty_code": true, "is_united_balance": false, "is_united_balance_unlimited": false, "united_balance_services_count": 30, "is_code_required": false, "balance_edit_type_id": 1, "cost": 52000, // Итоговая стоимость типа абонемента в Yclients "is_archived": false, "expiration_type_id": 2, // 2 - При продаже "balance_container": { "links": [ { "count": 10, // Количество процедур для данной услуги "is_unlimited": false, "service": { "id": 11355840, // ID услуги (yclients_service_id) "title": "Бёдра" // ... другие поля услуги } } // ... другие услуги в этом типе абонемента ] }, "abonements_count": 61, "attached_salon_ids": [583940, 773014] } // ... другие типы абонементов ] }
* Действие: Бэкенд получает список, сохраняет/обновляет его в локальной БД (таблица YclientsAbonementTypesCache) для последующего сравнения при оформлении абонемента мастером.

6.3. Создание нового типа абонемента:
* Метод: POST
* URL: https://yclients.com/api/v1/chain/{chain_id}/loyalty/abonement_types ({chain_id} из админки, например, 566822).
* Заголовки: Аналогично п. 6.1.
* Тело запроса (JSON, пример ключевых полей, полный список полей и их точные значения должны быть взяты из актуальной документации Yclients и настроек админ-панели калькулятора):
json { "title": "Сгенерированное_Уникальное_Название_Абонемента_По_Шаблону", "salon_group_id": 566822, // ID сети из админки "cost": 50000, // "Итоговая стоимость курса" из калькулятора "salon_ids": [992493, 993170, 993180, 853611, 1073250, 990785, 931484, 1147984, 1084591, 951422, 1073247, 1130009, 583940, 773014, 872713], // Список ID филиалов из админки "period": 2, // Срок действия (значение из админки) "period_unit_id": 4, // Единица срока действия (4 - год, значение из админки) "allow_freeze": true, // true/false в зависимости от выбранного пакета "freeze_limit": 180, // Количество единиц для заморозки, согласно пакету (например, 180 для Стандарта) "freeze_limit_unit_id": 1, // Единица заморозки (1 - дни) "is_booking_when_frozen_allowed": false, // Стандартное значение или из админки "service_price_correction": true, // Стандартное значение "expiration_type_id": 1, // Тип активации (1 - при первом посещении, 2 - при продаже; настраивается в админке) "is_allow_empty_code": true, // Стандартное значение или из админки "is_united_balance": false, // Стандартное значение "united_balance_services_count": 0, // Стандартное значение "balance_edit_type_id": 2, // Тип баланса (2 - пополнение по услугам) "is_online_sale_enabled": false, // Стандартное значение "online_sale_title": "", // Пустое или по шаблону "online_sale_description": "", // Пустое "autoactivation_time_unit_id": 1, // Стандартное значение "is_archived": false, // Стандартное значение "service_rows": [ // Массив выбранных услуг и их количество {"serviceId": 11254701, "categoryId": 11254696, "count": 10}, // Пример {"serviceId": 11302815, "categoryId": 11254696, "count": 10} // Пример ], "category_id": null, // Обычно null для таких абонементов "weight": null // Обычно null или авто }
* Ожидаемый успешный ответ (JSON, пример структуры):
json { "success": true, "data": { "id": 1079937, // ID созданного типа абонемента "title": "Сгенерированное_Уникальное_Название_Абонемента_По_Шаблону" // ... другие поля созданного типа абонемента }, "meta": [] }
* Действие: Бэкенд отправляет запрос. При успехе, добавляет новый тип абонемента в локальный кэш (YclientsAbonementTypesCache) и возвращает фронтенду id и title созданного типа.
* Обработка ошибок API Yclients: Бэкенд должен корректно обрабатывать возможные ошибки от API Yclients (например, 400 Bad Request, 401 Unauthorized, 403 Forbidden, 422 Unprocessable Entity, 5xx Server Error) и возвращать фронтенду стандартизированные сообщения об ошибках, которые можно отобразить мастеру (например, "Ошибка при создании типа абонемента в Yclients: [текст ошибки от Yclients или кастомное сообщение]. Попробуйте позже или обратитесь к администратору."). Логировать детали ошибки на бэкенде.